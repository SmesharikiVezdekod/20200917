{"version":3,"sources":["FirstPage.js","LastPage.js","store/PodcastStore.js","store/actions.js","PodcastDataPage.js","AudioEditingPage.js","MusicPickingPage.js","PodcastPreviewPage.js","App.js","serviceWorker.js","index.js","assets/ic_play.svg","assets/ic_vk_add.svg","assets/ic_vk_done.svg","assets/ic_picture.svg","assets/ic_remove_timecode.svg","assets/ic_add_timecode.svg","assets/ic_pause.svg"],"names":["FirstPage","props","text","className","weight","id","stretched","action","onClick","next","icon","src","icVkAdd","alt","header","LastPage","icVkDone","podcastStore","createStore","state","type","title","value","description","imagePreview","audio","adultContent","excludeFromExport","trailer","access","timecodes","push","time","splice","pos","timecode","panel","send","dispatch","setTitle","setDescription","setTimecode","PodcastDataPage","image","left","back","accept","onChange","event","reader","FileReader","onload","e","target","result","setState","document","getElementById","readAsDataURL","files","htmlFor","PictureIcon","this","placeholder","style","display","mode","click","openEditing","getState","console","log","size","React","Component","AudioEditingPage","subscription","subscribe","children","map","el","index","removeIcon","addIcon","MusicPickingPage","PodcastPreviewPage","duration","secs","Math","round","hours","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","audioRef","createRef","playIconRef","separator","ref","playIcon","player","current","paused","play","pause","onPlay","pauseIcon","onPause","onEnded","onDurationChange","formatSeconds","marginTop","wide","paddingTop","paddingBottom","marginBottom","width","App","activePanel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5722dcf7.chunk.js","sourcesContent":["import React from 'react';\nimport {Panel} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\nimport icVkAdd from \"./assets/ic_vk_add.svg\"\n\nfunction FirstPage(props) {\n\n    const text = <div>\n        <Text className={\"placeholder-text\"} weight={\"bold\"}>Добавьте первый подкаст</Text>\n        <Text className={\"placeholder-text\"} weight={\"regular\"}>Добавляйте, редактируйте и делитесь подкастами вашего сообщества.</Text>\n    </div>\n\n    return (\n        <Panel id={\"first_panel\"}>\n            <PanelHeader>Подкасты</PanelHeader>\n            <Placeholder\n                stretched={true}\n                action={<Button onClick={() => {props.next()}}>Добавить подкаст</Button>}\n                icon={<img src={icVkAdd} alt={\"add\"}/>}\n                header={text}/>\n        </Panel>\n    );\n}\n\nexport default FirstPage;","import React from 'react';\nimport {Panel} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\nimport icVkDone from \"./assets/ic_vk_done.svg\"\n\nfunction LastPage(props) {\n\n    const text = <div>\n        <Text className={\"placeholder-text\"} weight={\"semibold\"}>Подкаст добавлен</Text>\n        <Text className={\"placeholder-text\"} weight={\"regular\"}>Раскажите своим подписчикам о новом подкасте, чтобы получить больше слушателей..</Text>\n    </div>\n\n    return (\n        <Panel id={\"last_panel\"}>\n            <PanelHeader>Подкасты</PanelHeader>\n            <Placeholder\n                stretched={true}\n                action={<Button onClick={() => {props.next()}}>Поделиться подкастом</Button>}\n                icon={<img src={icVkDone} alt={\"add\"}/>}\n                header={text}/>\n        </Panel>\n    );\n}\n\nexport default LastPage;","import { createStore } from 'redux'\n\nconst podcastStore = createStore(reducer, {\n    panel: \"first_panel\",\n    title: \"\",\n    description: \"\",\n    imagePreview: null,\n    audio: null,\n    adultContent: false,\n    excludeFromExport: false,\n    trailer: false,\n    access: 0,\n    timecodes: []\n});\n\nfunction reducer(state, action) {\n    // eslint-disable-next-line default-case\n    switch (action.type) {\n        case \"title\":\n            state.title = action.value\n            break;\n        case \"description\":\n            state.description = action.value\n            break;\n        case \"imagePreview\":\n            state.imagePreview = action.value\n            break;\n        case \"audio\":\n            state.audio = action.value\n            break;\n        case \"adultContent\":\n            state.adultContent = action.value\n            break;\n        case \"excludeFromExport\":\n            state.excludeFromExport = action.value\n            break;\n        case \"trailer\":\n            state.trailer = action.value\n            break;\n        case \"access\":\n            state.access = action.value\n            break;\n        case \"add-timecode\":\n            state.timecodes.push({time: \"00:00\", title: \"New timecode\"})\n            break;\n        case \"remove-timecode\":\n            state.timecodes.splice(action.value, 1)\n            break;\n        case \"set-timecode\":\n            const pos = action.value.pos\n            const timecode = action.value.timecode\n            state.timecodes[pos] = timecode\n            break;\n    }\n    return state\n}\n\nexport default podcastStore;","import podcastStore from \"./PodcastStore\";\n\nfunction send(type, value) {\n    podcastStore.dispatch({type, value})\n}\n\nexport function setTitle(title) {\n    send(\"title\", title)\n}\n\nexport function setDescription(description) {\n    send(\"description\", description)\n}\n\nexport function setImagePreview(imagePreview) {\n    send(\"imagePreview\", imagePreview)\n}\n\nexport function setAudio(audio) {\n    send(\"audio\", audio)\n}\n\nexport function setAdultContent(adultContent) {\n    send(\"adultContent\", adultContent)\n}\n\nexport function setExcludeFromExport(exclude) {\n    send(\"excludeFromExport\", exclude)\n}\n\nexport function setHasTrailer(hasTrailer) {\n    send(\"trailer\", hasTrailer)\n}\n\nexport function setAccess(access) {\n    send(\"access\", access)\n}\n\nexport function removeTimecode(pos) {\n    send(\"remove-timecode\", pos)\n}\n\nexport function addTimecode() {\n    send(\"add-timecode\")\n}\n\nexport function setTimecode(pos, timecode) {\n    send(\"set-timecode\", {pos, timecode})\n}","import React from 'react';\nimport {Checkbox, Input, Panel, PanelHeaderBack} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport {\n    setTitle,\n    setAccess,\n    setDescription,\n    setImagePreview,\n    setHasTrailer,\n    setAudio,\n    setAdultContent,\n    setExcludeFromExport\n} from \"./store/actions\";\nimport podcastStore from \"./store/PodcastStore\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\nimport './PodcastDataPage.css'\nimport PictureIcon from \"./assets/ic_picture.svg\"\n\nexport default class PodcastDataPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {image: null, audio: null}\n        //this.setState({image: PictureIcon})\n    }\n\n    render() {\n\n        return (\n            <Panel id={\"data_panel\"}>\n                <PanelHeader left={<PanelHeaderBack onClick={() => this.props.back()}/>}>\n                    Новый подкаст\n                </PanelHeader>\n                {/*<Text weight={\"bold\"}>{podcastStore.getState().title}</Text>*/}\n                <div className={\"content\"}>\n                    <div className={\"horizontal-block\"}>\n                        <div className={\"load-image-block\"}>\n                            <input className={\"load-file-input\"} id=\"image-input\" type=\"file\" accept=\"image/*\"\n                                   onChange={(event) => {\n                                       const reader = new FileReader();\n                                       reader.onload = (e) => {\n                                           setImagePreview(e.target.result);\n                                           this.setState({image: e.target.result})\n                                           document.getElementById(\"image-input\")\n                                       };\n                                       reader.readAsDataURL(event.target.files[0]);\n                                   }}/>\n                            <label htmlFor=\"image-input\" className={\"load-image-label\"}>\n                                <img src={PictureIcon} className={\"load-image-icon-img\"}/>\n                                <img src={this.state.image} className={\"load-image-img\"}/>\n                            </label>\n                        </div>\n                        <div className={\"input-block\"}>\n                            <Text weight={\"regular\"} className={\"input-hint-text\"}>\n                                Название\n                            </Text>\n\n                            <Input id={\"podcast_title\"} placeholder={\"Введите название подкаста\"}/>\n                        </div>\n                    </div>\n\n                    <div className={\"input-block-description\"}>\n                        <Text weight={\"regular\"} className={\"input-hint-text\"}>\n                            Описание\n                        </Text>\n\n                        <Input id={\"podcast_description\"}/>\n                    </div>\n\n                    <div id={\"load_audio_block\"} className={\"load-audio-block\"}>\n                        <Text className={\"audio-title-text\"} weight={\"semibold\"}>\n                            Загрузите ваш подкаст\n                        </Text>\n\n                        <Text className={\"audio-description-text\"} weight={\"regular\"}>\n                            Выберите готовый аудиофайл из вашего телефона и добавьте его\n                        </Text>\n\n                        <div className={\"load-audio-button-block\"}>\n                            <input className={\"load-file-input\"} id=\"audio-input\" type=\"file\" accept=\"audio/*\"\n                                   onChange={(event) => {\n                                       const reader = new FileReader();\n                                       reader.onload = (e) => {\n                                           setAudio(e.target.result);\n                                           this.setState({audio: e.target.result})\n                                           document.getElementById(\"load_audio_block\").style.display = 'none'\n                                           document.getElementById(\"audio_block\").style.display = 'block'\n                                       };\n                                       reader.readAsDataURL(event.target.files[0]);\n                                   }}/>\n                            <label className={\"load-audio-button-label\"} htmlFor=\"audio-input\">\n                                <Button mode={\"outline\"} onClick={() => document.getElementById(\"audio-input\").click()}>\n                                    Загрузить файл\n                                </Button>\n                            </label>\n                        </div>\n                    </div>\n\n                    <div className={\"audio-block\"} id={\"audio_block\"}>\n                        <Text weight={\"regular\"} className={\"audio-text\"}>\n                            Вы можете добавить таймкоды и скорректировать подкаст в режиме редактирования\n                        </Text>\n                        <Button className={\"audio-block-edit-button\"} mode={\"outline\"} onClick={() => {\n                            setTitle(document.getElementById(\"podcast_title\").value)\n                            setDescription(document.getElementById(\"podcast_description\").value)\n                            this.props.openEditing()\n                        }}>Редактировать</Button>\n                    </div>\n\n                    <Checkbox id={\"adult_content\"} value={podcastStore.getState().adultContent}\n                              onChange={(event) => {\n                                  setAdultContent(event.target.value)\n                                  console.log(event.target.value)\n                              }}>\n                        Ненормативный контент\n                    </Checkbox>\n                    <Checkbox id={\"exclude_from_export\"} value={podcastStore.getState().excludeFromExport}\n                              onChange={(event) => {\n                                  setExcludeFromExport(event.target.value)\n                              }}>\n                        Исключить эпизод из экспорта\n                    </Checkbox>\n                    <Checkbox id={\"has_trailer\"} value={podcastStore.getState().trailer}\n                              onChange={(event) => {\n                                  setHasTrailer(event.target.value)\n                              }}>\n                        Трейлер подкаста\n                    </Checkbox>\n\n                    <Button size={\"xl\"} onClick={() => {\n                        setTitle(document.getElementById(\"podcast_title\").value)\n                        setDescription(document.getElementById(\"podcast_description\").value)\n                        this.props.next()\n                    }}>Далее</Button>\n                </div>\n            </Panel>\n        );\n    }\n}\n","import React, {createRef} from 'react';\nimport {Panel, PanelHeaderBack} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Checkbox from \"@vkontakte/vkui/dist/components/Checkbox/Checkbox\";\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport \"./AudioEditingPage.css\"\nimport podcastStore from \"./store/PodcastStore\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport removeIcon from \"./assets/ic_remove_timecode.svg\"\nimport addIcon from \"./assets/ic_add_timecode.svg\"\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\nimport {addTimecode, removeTimecode, setTimecode} from \"./store/actions\";\n\nclass AudioEditingPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {subscription: null}\n    }\n\n    componentDidMount() {\n        this.state.subscription = podcastStore.subscribe(() => this.setState(this.state))\n    }\n\n    componentWillUnmount() {\n        this.state.subscription()\n    }\n\n    render() {\n\n        return (\n            <Panel id={\"editing_panel\"}>\n                <PanelHeader left={<PanelHeaderBack onClick={() => this.props.back()}/>}>\n                    Редактирование\n                </PanelHeader>\n\n                <Group\n                    header={<Div className={\"timecodes-title\"}>Таймкоды</Div>}\n                    children={<div>\n                        {podcastStore.getState().timecodes.map((el, index) => {\n\n                                return <Div className={\"timcode-row\"}>\n                                    <img className={\"add-remove-icon\"} onClick={() => removeTimecode(index)}\n                                         src={removeIcon}/>\n                                    <Input\n                                        className={\"timecode-title-input\"}\n                                        value={el.title}\n                                        onChange={(e) => setTimecode(index, {time: el.time, title: e.target.value})}/>\n                                    <Input\n                                        value={el.time}\n                                        onChange={(e) => setTimecode(index, {time: e.target.value, title: el.title})}/>\n                                </Div>\n                            }\n                        )}\n                    </div>}\n                />\n\n                <Group\n                    children={<Div className={\"timcode-row\"} onClick={() => addTimecode()}>\n                        <img className={\"add-remove-icon\"} src={addIcon}/>\n                        <span className={\"add-text\"}>Добавить таймкод</span>\n                    </Div>}\n                />\n            </Panel>\n        );\n    }\n}\n\nexport default AudioEditingPage;","import React from 'react';\nimport {Panel} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\n\nfunction MusicPickingPage(props) {\n\n    return (\n        <Panel id={\"music_picking_panel\"}>\n            <PanelHeader>Выбрать музыку</PanelHeader>\n\n        </Panel>\n    );\n}\n\nexport default MusicPickingPage;","import React, {createRef} from 'react';\nimport {Panel, PanelHeaderBack, Separator} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport podcastStore from \"./store/PodcastStore\";\nimport playIcon from \"./assets/ic_play.svg\"\nimport pauseIcon from \"./assets/ic_pause.svg\"\nimport \"./PodcastPreviewPage.css\"\nimport \"./base.css\"\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\n\nexport default class PodcastPreviewPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {duration: \"00:00\"}\n    }\n\n    formatSeconds(secs) {\n        secs = Math.round(secs);\n        let hours = Math.floor(secs / (60 * 60));\n\n        const divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n\n        const divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n\n        // console.log(hours + \":\" + minutes + \":\" + seconds);\n\n        if (seconds < 10) {\n            seconds = \"0\" + seconds;\n        }\n        if (minutes < 10) {\n            minutes = \"0\" + minutes;\n        }\n        if (hours < 10) {\n            if (hours < 1) {\n                return minutes + \":\" + seconds;\n            }\n            hours = \"0\" + hours;\n        }\n\n        return hours + \":\" + minutes + \":\" + seconds;\n    }\n\n    render() {\n        const audioRef = createRef()\n        const playIconRef = createRef()\n\n        return (\n            <Panel id={\"preview_panel\"}>\n                <PanelHeader left={<PanelHeaderBack onClick={() =>this.props.back()} />}>\n                    Редактирование\n                </PanelHeader>\n\n                <div className={\"page\"}>\n                    <Group\n                        separator={'hide'}\n                        children={<div className={\"header-block\"}>\n                            <div className={\"image-preview-block\"}>\n                                <img className={\"image-preview\"} src={podcastStore.getState().imagePreview}/>\n                                <img ref={playIconRef} className={\"play-icon\"} src={playIcon}\n                                     onClick={() => {\n                                         const player = audioRef.current\n                                         if (player.paused) {\n                                             player.play()\n                                         } else {\n                                             player.pause()\n                                         }\n                                     }}/>\n                                <audio\n                                    ref={audioRef}\n                                    src={podcastStore.getState().audio}\n                                    onPlay={() => {\n                                        playIconRef.current.src = pauseIcon\n                                    }}\n                                    onPause={() => {\n                                        playIconRef.current.src = playIcon\n                                    }}\n                                    onEnded={() => {\n                                        playIconRef.current.src = playIcon\n                                    }}\n                                    onDurationChange={() => this.setState({duration: this.formatSeconds(audioRef.current.duration)})}/>\n                            </div>\n                            <div className={\"podcast-title-text-block\"}>\n                                <span className={\"block-title\"}>{podcastStore.getState().title}</span>\n                                <span className={\"link\"}>ПапаDogs</span>\n                                <span className={\"subtitle\"}>Длительность: {this.state.duration}</span>\n                            </div>\n                        </div>}\n                    />\n\n                    <Separator style={{marginTop: \"12px\"}} wide={true}/>\n\n                    <Group\n                        separator={'hide'}\n                        header={<div className={\"block-title\"}>Описание</div>}\n                        children={<div className={\"description-text\"}>\n                            {podcastStore.getState().description}\n                        </div>}\n                    />\n\n                    <Separator wide={true}/>\n\n                    <Group\n                        separator={'hide'}\n                        header={<div className={\"block-title\"}>Содержание</div>}\n                        children={<div>\n                            {podcastStore.getState().timecodes.map(el => {\n                                    return <div style={{\n                                        paddingTop: 14,\n                                        paddingBottom: 14,\n                                    }}>\n                                        <span className={\"timecode-time\"}>{el.time}</span>\n                                        <span className={\"timecode-title\"}>  — {el.title}</span>\n                                    </div>\n                                }\n                            )}\n                        </div>}\n                    />\n\n                    <Separator style={{marginBottom: \"24px\"}} wide={true}/>\n\n                    <Button className={\"next-button\"} style={{width: \"100%\"}} stretched={true} size={'l'}\n                            onClick={() => this.props.next()}>Далее</Button>\n                </div>\n            </Panel>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport FirstPage from \"./FirstPage\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport LastPage from \"./LastPage\";\nimport PodcastDataPage from \"./PodcastDataPage\";\nimport AudioEditingPage from \"./AudioEditingPage\";\nimport MusicPickingPage from \"./MusicPickingPage\";\nimport PodcastPreviewPage from \"./PodcastPreviewPage\";\nimport podcastStore from \"./store/PodcastStore\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            panel: \"first_panel\",\n        }\n    }\n\n    render() {\n        return (\n            <View activePanel={this.state.panel}>\n\n                <FirstPage\n                    id={\"first_panel\"}\n                    next={() => {this.setState({panel: \"data_panel\"})}}/>\n\n                <PodcastDataPage\n                    id={\"data_panel\"}\n                    back={() => {this.setState({panel: \"first_panel\"})}}\n                    openEditing={() => {this.setState({panel: \"editing_panel\"})}}\n                    next={() => {this.setState({panel: \"preview_panel\"})}}/>\n\n                <AudioEditingPage\n                    id={\"editing_panel\"}\n                    back={() => {this.setState({panel: \"data_panel\"})}}/>\n\n                <MusicPickingPage\n                    id={\"music_picking_panel\"}\n                    back={() => {this.setState({panel: \"editing_panel\"})}}/>\n\n                <PodcastPreviewPage\n                    id={\"preview_panel\"}\n                    back={() => {this.setState({panel: \"data_panel\"})}}\n                    next={() => {this.setState({panel: \"last_panel\"})}}/>\n\n                <LastPage\n                    id={\"last_panel\"}\n                    next={() => {this.setState({panel: \"first_panel\"})}}/>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ic_play.0a2aa874.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_vk_add.67694684.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_vk_done.abe3d44f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_picture.45c8c5df.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_remove_timecode.f8a82422.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_add_timecode.2b9e38f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_pause.cb3f9766.svg\";"],"sourceRoot":""}